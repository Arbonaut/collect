/**
 * Generated by Gas3 v2.3.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (DataExportState.as).
 */

package org.openforis.collect.remoting.service.export {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.granite.util.Enum;

    [Bindable]
    public class DataExportStateBase implements IExternalizable {

        private var _cancelled:Boolean;
        private var _complete:Boolean;
        private var _count:int;
        private var _error:Boolean;
        private var _format:DataExportState$Format;
        private var _running:Boolean;
        private var _total:int;

        public function set cancelled(value:Boolean):void {
            _cancelled = value;
        }
        public function get cancelled():Boolean {
            return _cancelled;
        }

        public function set complete(value:Boolean):void {
            _complete = value;
        }
        public function get complete():Boolean {
            return _complete;
        }

        [Bindable(event="unused")]
        public function get count():int {
            return _count;
        }

        public function set error(value:Boolean):void {
            _error = value;
        }
        public function get error():Boolean {
            return _error;
        }

        [Bindable(event="unused")]
        public function get format():DataExportState$Format {
            return _format;
        }

        public function set running(value:Boolean):void {
            _running = value;
        }
        public function get running():Boolean {
            return _running;
        }

        public function set total(value:int):void {
            _total = value;
        }
        public function get total():int {
            return _total;
        }

        public function readExternal(input:IDataInput):void {
            _cancelled = input.readObject() as Boolean;
            _complete = input.readObject() as Boolean;
            _count = input.readObject() as int;
            _error = input.readObject() as Boolean;
            _format = Enum.readEnum(input) as DataExportState$Format;
            _running = input.readObject() as Boolean;
            _total = input.readObject() as int;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_cancelled);
            output.writeObject(_complete);
            output.writeObject(_count);
            output.writeObject(_error);
            output.writeObject(_format);
            output.writeObject(_running);
            output.writeObject(_total);
        }
    }
}