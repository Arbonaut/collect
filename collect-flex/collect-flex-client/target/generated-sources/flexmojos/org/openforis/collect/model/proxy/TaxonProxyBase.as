/**
 * Generated by Gas3 v2.3.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (TaxonProxy.as).
 */

package org.openforis.collect.model.proxy {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import org.openforis.collect.Proxy;

    [Bindable]
    public class TaxonProxyBase implements IExternalizable, Proxy {

        private var _code:String;
        private var _scientificName:String;
        private var _step:Number;
        private var _systemId:Number;
        private var _taxonId:Number;
        private var _taxonomicRank:String;
        private var _taxonomyId:Number;

        [Bindable(event="unused")]
        public function get code():String {
            return _code;
        }

        [Bindable(event="unused")]
        public function get scientificName():String {
            return _scientificName;
        }

        [Bindable(event="unused")]
        public function get step():Number {
            return _step;
        }

        [Bindable(event="unused")]
        public function get systemId():Number {
            return _systemId;
        }

        [Bindable(event="unused")]
        public function get taxonId():Number {
            return _taxonId;
        }

        [Bindable(event="unused")]
        public function get taxonomicRank():String {
            return _taxonomicRank;
        }

        [Bindable(event="unused")]
        public function get taxonomyId():Number {
            return _taxonomyId;
        }

        public function readExternal(input:IDataInput):void {
            _code = input.readObject() as String;
            _scientificName = input.readObject() as String;
            _step = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _systemId = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _taxonId = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _taxonomicRank = input.readObject() as String;
            _taxonomyId = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_code);
            output.writeObject(_scientificName);
            output.writeObject(_step);
            output.writeObject(_systemId);
            output.writeObject(_taxonId);
            output.writeObject(_taxonomicRank);
            output.writeObject(_taxonomyId);
        }
    }
}