/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (NodeDefinition.as).
 */

package org.openforis.idm.metamodel {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import mx.collections.ListCollectionView;
    import org.granite.collections.IMap;

    [Bindable]
    public class NodeDefinitionBase extends Versionable implements Annotatable {

        private var _annotations:IMap;
        private var _descriptions:ListCollectionView;
        private var _id:Number;
        private var _labels:ListCollectionView;
        private var _maxCount:Number;
        private var _minCount:Number;
        private var _multiple:Boolean;
        private var _name:String;
        private var _parentDefinition:EntityDefinition;
        private var _prompts:ListCollectionView;
        private var _relevantExpression:String;
        private var _requiredExpression:String;
        private var _schema:Schema;

        [Bindable(event="unused")]
        public function get descriptions():ListCollectionView {
            return _descriptions;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        [Bindable(event="unused")]
        public function get labels():ListCollectionView {
            return _labels;
        }

        [Bindable(event="unused")]
        public function get maxCount():Number {
            return _maxCount;
        }

        [Bindable(event="unused")]
        public function get minCount():Number {
            return _minCount;
        }

        [Bindable(event="unused")]
        public function get multiple():Boolean {
            return _multiple;
        }

        [Bindable(event="unused")]
        public function get name():String {
            return _name;
        }

        [Bindable(event="unused")]
        public function get parentDefinition():EntityDefinition {
            return _parentDefinition;
        }

        [Bindable(event="unused")]
        public function get prompts():ListCollectionView {
            return _prompts;
        }

        [Bindable(event="unused")]
        public function get relevantExpression():String {
            return _relevantExpression;
        }

        [Bindable(event="unused")]
        public function get requiredExpression():String {
            return _requiredExpression;
        }

        [Bindable(event="unused")]
        public function get schema():Schema {
            return _schema;
        }

        public function get annotationNames():ListCollectionView {
            return null;
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _annotations = input.readObject() as IMap;
            _descriptions = input.readObject() as ListCollectionView;
            _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _labels = input.readObject() as ListCollectionView;
            _maxCount = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _minCount = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _multiple = input.readObject() as Boolean;
            _name = input.readObject() as String;
            _parentDefinition = input.readObject() as EntityDefinition;
            _prompts = input.readObject() as ListCollectionView;
            _relevantExpression = input.readObject() as String;
            _requiredExpression = input.readObject() as String;
            _schema = input.readObject() as Schema;
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_annotations);
            output.writeObject(_descriptions);
            output.writeObject(_id);
            output.writeObject(_labels);
            output.writeObject(_maxCount);
            output.writeObject(_minCount);
            output.writeObject(_multiple);
            output.writeObject(_name);
            output.writeObject(_parentDefinition);
            output.writeObject(_prompts);
            output.writeObject(_relevantExpression);
            output.writeObject(_requiredExpression);
            output.writeObject(_schema);
        }
    }
}