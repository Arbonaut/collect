/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (Record.as).
 */

package org.openforis.idm.model {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import mx.collections.ListCollectionView;
    import org.granite.collections.IMap;
    import org.openforis.idm.metamodel.ModelVersion;
    import org.openforis.idm.metamodel.Survey;

    [Bindable]
    public class RecordBase implements IExternalizable {

        private var _id:Number;
        private var _modelVersion:ModelVersion;
        private var _nextId:int;
        private var _nodesById:IMap;
        private var _observers:ListCollectionView;
        private var _rootEntity:Entity;
        private var _survey:Survey;

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        [Bindable(event="unused")]
        public function get rootEntity():Entity {
            return _rootEntity;
        }

        [Bindable(event="unused")]
        public function get survey():Survey {
            return _survey;
        }

        public function readExternal(input:IDataInput):void {
            _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _modelVersion = input.readObject() as ModelVersion;
            _nextId = input.readObject() as int;
            _nodesById = input.readObject() as IMap;
            _observers = input.readObject() as ListCollectionView;
            _rootEntity = input.readObject() as Entity;
            _survey = input.readObject() as Survey;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_id);
            output.writeObject(_modelVersion);
            output.writeObject(_nextId);
            output.writeObject(_nodesById);
            output.writeObject(_observers);
            output.writeObject(_rootEntity);
            output.writeObject(_survey);
        }
    }
}