/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (CodeListItem.as).
 */

package org.openforis.idm.metamodel {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import mx.collections.ListCollectionView;

    [Bindable]
    public class CodeListItemBase extends Versionable {

        private var _childItems:ListCollectionView;
        private var _code:String;
        private var _descriptions:ListCollectionView;
        private var _labels:ListCollectionView;
        private var _list:CodeList;
        private var _parentItem:CodeListItem;
        private var _qualifiable:Boolean;

        [Bindable(event="unused")]
        public function get childItems():ListCollectionView {
            return _childItems;
        }

        [Bindable(event="unused")]
        public function get code():String {
            return _code;
        }

        [Bindable(event="unused")]
        public function get descriptions():ListCollectionView {
            return _descriptions;
        }

        [Bindable(event="unused")]
        public function get labels():ListCollectionView {
            return _labels;
        }

        [Bindable(event="unused")]
        public function get parentItem():CodeListItem {
            return _parentItem;
        }

        [Bindable(event="unused")]
        public function get qualifiable():Boolean {
            return _qualifiable;
        }

        override public function readExternal(input:IDataInput):void {
            super.readExternal(input);
            _childItems = input.readObject() as ListCollectionView;
            _code = input.readObject() as String;
            _descriptions = input.readObject() as ListCollectionView;
            _labels = input.readObject() as ListCollectionView;
            _list = input.readObject() as CodeList;
            _parentItem = input.readObject() as CodeListItem;
            _qualifiable = input.readObject() as Boolean;
        }

        override public function writeExternal(output:IDataOutput):void {
            super.writeExternal(output);
            output.writeObject(_childItems);
            output.writeObject(_code);
            output.writeObject(_descriptions);
            output.writeObject(_labels);
            output.writeObject(_list);
            output.writeObject(_parentItem);
            output.writeObject(_qualifiable);
        }
    }
}