<?xml version="1.0" encoding="utf-8"?>
<detail:EntityFormItem 
		xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:detail="org.openforis.collect.ui.component.detail.*"
		>

	<detail:layout>
		<s:VerticalLayout paddingLeft="10" gap="0" />
	</detail:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.collections.ListCollectionView;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			
			import org.openforis.collect.Application;
			import org.openforis.collect.metamodel.proxy.AttributeDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.EntityDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.NodeDefinitionProxy;
			import org.openforis.collect.model.proxy.EntityProxy;
			import org.openforis.collect.ui.UIBuilder;
			
			import spark.components.FormItem;
			import spark.components.Label;
			
			override protected function createChildren():void {
				if(!childrenAdded){
					super.createChildren();
					addElement(form);
					
					var childDefinitions:ListCollectionView = entityDefinition.childDefinitions;
					for each (var def:NodeDefinitionProxy in childDefinitions) {
						if(UIBuilder.isInVersion(entityDefinition, Application.activeRecord.version)) {
							if(def is AttributeDefinitionProxy){
								var ad:AttributeDefinitionProxy = AttributeDefinitionProxy(def);
								/*
								var formItem:FormItem = new FormItem();
								formItem.label = ad.getLabelText();
								var attrFormItem:AttributeFormItem = UIBuilder.getAttributeFormItem(ad);
								attrFormItem.addTo(formItem);
								form.addElement(formItem);
								*/
								var row:GridRow = new GridRow();
								var labelCol:GridItem = new GridItem();
								var label:Label = new Label();
								label.text = ad.getLabelText();
								labelCol.addChild(label);
								row.addChild(labelCol);
								var attrCol:GridItem = new GridItem();
								var attrFormItem:AttributeFormItem = UIBuilder.getAttributeFormItem(ad);
								attrFormItem.addTo(attrCol);
								row.addChild(attrCol);
								form.addChild(row);
								
								BindingUtils.bindProperty(attrFormItem, "parentEntity", this, "entity");
							} else if(def is EntityDefinitionProxy) {
								//form.addChild(entityFormItem);
								
								var row:GridRow = new GridRow();
								var attrCol:GridItem = new GridItem();
								var entityFormItem:EntityFormItem = UIBuilder.getEntityFormItem(EntityDefinitionProxy(def));
								entityFormItem.addTo(attrCol);
								form.addChild(row);
							}
						}
					}
					childrenAdded = true;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:Grid height="100%" width="100%" id="form">
			
		</mx:Grid>
		<!--<s:Form height="100%" width="100%" id="form">
			<s:layout>
				<s:FormLayout gap="-15" paddingLeft="10" />
			</s:layout>
		</s:Form>-->
		
	</fx:Declarations>
	
</detail:EntityFormItem>
