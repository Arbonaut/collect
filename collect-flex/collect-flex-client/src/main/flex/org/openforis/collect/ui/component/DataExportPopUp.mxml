<?xml version="1.0" encoding="utf-8"?>
<component:PopUp xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:component="org.openforis.collect.ui.component.*"
		 currentState="{STATE_TYPE_SELECTION}"
		 width="400" height="300"
		 title="{Message.get('export.popUp.title')}"
		 >
	
	<fx:Script>
		<![CDATA[
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.model.CollectRecord$Step;
			import org.openforis.collect.presenter.DataExportPopUpPresenter;
			
			public static const STATE_TYPE_SELECTION:String = "typeSelection";
			public static const STATE_PARAMETERS_SELECTION:String = "parametersSelection";
			public static const STATE_PARTIAL_EXPORT_PARAMETERS_SELECTION:String = "partialExportParametersSelection";
			public static const STATE_EXPORTING:String = "exporting";
			public static const STATE_COMPLETE:String = "complete";
			
			private var _presenter:DataExportPopUpPresenter;

			override protected function initializationComplete():void {
				super.initializationComplete();
				_presenter = new DataExportPopUpPresenter(this);
			}
			
			protected function stepLabelFunction(step:Object):String {
				switch(step) {
					case CollectRecord$Step.ENTRY:
						return Message.get("edit.dataEntry");
					case CollectRecord$Step.CLEANSING:
						return Message.get("edit.dataCleansing");
					case CollectRecord$Step.ANALYSIS:
						return Message.get("edit.dataAnalysis");
					default:
						return step.label;
				} 
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="typeGroup" />
	</fx:Declarations>
	
	<component:states>
		<s:State name="typeSelection" />
		<s:State name="parametersSelection" />
		<s:State name="partialExportParametersSelection" basedOn="parametersSelection" />
		<s:State name="exporting" />
		<s:State name="complete" />
	</component:states>
	
	<s:VGroup includeIn="typeSelection"
			  itemCreationPolicy="immediate"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  width="100%" height="100%"
			  gap="30"
			  >
		<s:VGroup gap="4" 
				  horizontalAlign="center">
			
			<s:Label text="{Message.get('export.selectTypeLabel')}"
					 styleName="formLabel" />
			
			<s:VGroup>
				<s:RadioButton id="typeFull"
							   label="{Message.get('export.typeFullLabel')}"
							   value="full"
							   group="{typeGroup}"
							   />
				<s:RadioButton id="typePartial"
							   label="{Message.get('export.typeSelectiveLabel')}"
							   value="partial"
							   group="{typeGroup}"
							   />
			</s:VGroup>
		</s:VGroup>
			
		
		<s:HGroup gap="30">
			<s:Button id="continueButton" 
					  label="{Message.get('global.continue')}"
					  useHandCursor="true" 
					  buttonMode="true"
					  />
			
			<s:Button id="closeButton1"
					  label="{Message.get('global.cancel')}"
					  useHandCursor="true" 
					  buttonMode="true" />
		</s:HGroup>
			
	</s:VGroup>
	
	<s:VGroup includeIn="parametersSelection" 
			  itemCreationPolicy="immediate"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  width="100%" height="100%"
			  gap="30"
			  >
		<s:HGroup verticalAlign="middle">
			<s:Label text="{Message.get('export.selectStepLabel')}"
					 styleName="formLabel"/>
			
			<s:DropDownList id="stepDropDownList" labelFunction="stepLabelFunction" />
		</s:HGroup>
		
		<s:VGroup visible="false" visible.partialExportParametersSelection="true"
				  includeInLayout="false" includeInLayout.partialExportParametersSelection="true"
				  horizontalAlign="center"
				  gap="4"
				  width="100%" 
				  height="100%">
			<s:Label text="{Message.get('export.entitySelectionLabel')}"
					 styleName="formLabel"/>
			
			<mx:Tree id="rootTree"
					 height="100%"
					 width="100%"
					 />
		</s:VGroup>
		
		<s:HGroup gap="30">
			<s:Button id="exportButton" 
					  label="{Message.get('export.exportLabel')}"
					  useHandCursor="true" 
					  buttonMode="true"
					  />
			
			<s:Button id="closeButton2"
					  label="{Message.get('global.cancel')}"
					  useHandCursor="true" 
					  buttonMode="true" />
		</s:HGroup>
	</s:VGroup>
	
	<s:VGroup includeIn="exporting" 
			  itemCreationPolicy="immediate"
			  width="100%" height="100%"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  gap="30">
		
		<mx:ProgressBar id="progressBar"
						horizontalCenter="0"
						verticalCenter="0"
						mode="manual"
						label="%3%"
						labelPlacement="center"
						width="80%"
						/>
		
		<s:Label id="progressLabel" />

		<s:Button id="cancelExportButton"
				  label="{Message.get('global.cancel')}"
				  useHandCursor="true" 
				  buttonMode="true"
				  />
	</s:VGroup>
		
	<s:VGroup includeIn="complete" itemCreationPolicy="immediate"
			 height="100%" width="100%"
			 horizontalAlign="center"
			 verticalAlign="middle"
			 gap="20"
			 >
		<s:Label text="{Message.get('export.complete')}"
				 styleName="infoMessage"
				 />
		
		<s:HGroup gap="30">
			<s:Button id="downloadButton" 
					  label="{Message.get('global.download')}"
					  useHandCursor="true" 
					  buttonMode="true"
					  />
			
			<s:Button id="closeButton3"
					  label="{Message.get('global.close')}"
					  useHandCursor="true" 
					  buttonMode="true"
					  />
		</s:HGroup>
	</s:VGroup>
	
</component:PopUp>
