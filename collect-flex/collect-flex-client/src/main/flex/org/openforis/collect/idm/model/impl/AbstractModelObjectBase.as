/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (AbstractModelObject.as).
 */

package org.openforis.collect.idm.model.impl {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import mx.collections.ListCollectionView;
    import org.openforis.idm.metamodel.ModelObjectDefinition;

    [Bindable]
    public class AbstractModelObjectBase implements IExternalizable {

        private var _definition:ModelObjectDefinition;
        private var _errors:ListCollectionView;
        private var _path:String;
        private var _record:RecordImpl;
        private var _relevant:Boolean;
        private var _type:String;
        private var _warnings:ListCollectionView;

        [Bindable(event="unused")]
        public function get definition():ModelObjectDefinition {
            return _definition;
        }

        [Bindable(event="unused")]
        public function get errors():ListCollectionView {
            return _errors;
        }

        [Bindable(event="unused")]
        public function get path():String {
            return _path;
        }

        [Bindable(event="unused")]
        public function get type():String {
            return _type;
        }

        [Bindable(event="unused")]
        public function get warnings():ListCollectionView {
            return _warnings;
        }

        public function readExternal(input:IDataInput):void {
            _definition = input.readObject() as ModelObjectDefinition;
            _errors = input.readObject() as ListCollectionView;
            _path = input.readObject() as String;
            _record = input.readObject() as RecordImpl;
            _relevant = input.readObject() as Boolean;
            _type = input.readObject() as String;
            _warnings = input.readObject() as ListCollectionView;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_definition);
            output.writeObject(_errors);
            output.writeObject(_path);
            output.writeObject(_record);
            output.writeObject(_relevant);
            output.writeObject(_type);
            output.writeObject(_warnings);
        }

		public function set definition(value:ModelObjectDefinition):void {
			_definition = value;
		}

		public function set errors(value:ListCollectionView):void {
			_errors = value;
		}

		public function set path(value:String):void {
			_path = value;
		}

		public function get record():RecordImpl {
			return _record;
		}

		public function set record(value:RecordImpl):void {
			_record = value;
		}

		public function get relevant():Boolean {
			return _relevant;
		}

		public function set relevant(value:Boolean):void {
			_relevant = value;
		}

		public function set type(value:String):void {
			_type = value;
		}

		public function set warnings(value:ListCollectionView):void {
			_warnings = value;
		}


    }
}