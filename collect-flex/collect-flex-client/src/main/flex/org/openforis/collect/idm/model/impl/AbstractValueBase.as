/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (AbstractValue.as).
 */

package org.openforis.collect.idm.model.impl {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;

    [Bindable]
    public class AbstractValueBase implements IExternalizable {

        private var _symbol:AbstractValue$Symbol;
        private var _text1:String;
        private var _text2:String;
        private var _text3:String;
        private var _text4:String;
		private var _remarks:String;
		private var _approved:Boolean;
		
		[Bindable(event="unused")]
        public function get symbol():AbstractValue$Symbol {
            return _symbol;
        }
		public function set symbol(value:AbstractValue$Symbol):void {
			_symbol = value;
		}
		public function set text1(value:String):void {
			_text1 = value;
		}
		public function get text1():String {
			return _text1;
		}
		public function set text2(value:String):void {
			_text2 = value;
		}
		public function get text2():String {
			return _text2;
		}
		public function set text3(value:String):void {
			_text3 = value;
		}
		public function get text3():String {
			return _text3;
		}
		public function set text4(value:String):void {
			_text4 = value;
		}
		public function get text4():String {
			return _text4;
		}
		public function set remarks(value:String):void {
			_remarks = value;
		}
		public function get remarks():String {
			return _remarks;
		}
		public function set approved(value:Boolean):void {
			_approved = value;
		}
		public function get approved():Boolean {
			return _approved;
		}
		
        public function readExternal(input:IDataInput):void {
            //_symbol = Enum.readEnum(input) as AbstractValue$Symbol;
            _text1 = input.readObject() as String;
            _text2 = input.readObject() as String;
            _text3 = input.readObject() as String;
            _text4 = input.readObject() as String;
			_remarks = input.readObject() as String;
			_approved = input.readObject() as Boolean;
		}

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_symbol);
            output.writeObject(_text1);
            output.writeObject(_text2);
            output.writeObject(_text3);
            output.writeObject(_text4);
			output.writeObject(_remarks);
			output.writeObject(_approved);
		}
    }
}