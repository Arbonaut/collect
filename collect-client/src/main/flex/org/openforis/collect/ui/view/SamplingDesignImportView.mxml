<?xml version="1.0" encoding="utf-8"?>
<view:AbstractReferenceDataImportView xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:component="org.openforis.collect.ui.component.*"
		 xmlns:datagrid="org.openforis.collect.ui.component.datagrid.*"
		 xmlns:view="org.openforis.collect.ui.view.*"
		 skinClass="org.openforis.collect.ui.skin.SamplingDesignImportViewSkin"
		 creationComplete="creationCompleteHandler(event)"
		 >

	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.openforis.collect.model.proxy.SamplingDesignItemProxy;
			import org.openforis.collect.presenter.SamplingDesignImportPresenter;
			
			import spark.components.gridClasses.GridColumn;
			
			private var _presenter:SamplingDesignImportPresenter;
			private var _surveyId:int;
			private var _work:Boolean;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				_presenter = new SamplingDesignImportPresenter(this);
			}
			
			public function levelLabelFunction(item:SamplingDesignItemProxy, column:GridColumn):String {
				var dataField:String = column.dataField;
				var parts:Array = dataField.split("_");
				var levelPosString:String = parts[1];
				var levelPosition:int = int(levelPosString);
				if ( levelPosition <= item.levelCodes.length ) {
					var result:Object = item.levelCodes.getItemAt(levelPosition - 1);
					return String(result);
				} else {
					return "";
				}
			}

			public function get surveyId():int {
				return _surveyId;
			}

			public function set surveyId(value:int):void {
				_surveyId = value;
			}

			public function get work():Boolean {
				return _work;
			}

			public function set work(value:Boolean):void {
				_work = value;
			}

		]]>
	</fx:Script>
	
	<view:states>
		<s:State name="default" enterState="invalidateSkinState()" />
		<s:State name="loading" enterState="invalidateSkinState()" />
		<s:State name="selectFile" enterState="invalidateSkinState()" />
		<s:State name="uploading" enterState="invalidateSkinState()" />
		<s:State name="importing" enterState="invalidateSkinState()" />
		<s:State name="error" enterState="invalidateSkinState()" />
	</view:states>
	
</view:AbstractReferenceDataImportView>
