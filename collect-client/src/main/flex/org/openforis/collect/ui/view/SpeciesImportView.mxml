<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:component="org.openforis.collect.ui.component.*"
		 xmlns:datagrid="org.openforis.collect.ui.component.datagrid.*"
		 creationComplete="creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.manager.speciesImport.TaxonParsingError$ErrorType;
			import org.openforis.collect.metamodel.proxy.TaxonSummaryProxy;
			import org.openforis.collect.presenter.SpeciesImportPresenter;
			import org.openforis.collect.remoting.service.speciesImport.proxy.TaxonParsingErrorProxy;
			import org.openforis.collect.util.ObjectUtil;
			
			public static const STATE_DEFAULT:String = "default";
			public static const STATE_LOADING:String = "loading";
			public static const STATE_SELECT_FILE:String = "selectFile";
			public static const STATE_UPLOADING:String = "uploading";
			public static const STATE_IMPORTING:String = "importing";
			public static const STATE_ERROR:String = "error";

			private var _presenter:SpeciesImportPresenter;
			private var _showCloseButton:Boolean;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				_presenter = new SpeciesImportPresenter(this);
			}
			
			protected function taxonIdLabelFunction(item:TaxonSummaryProxy, gridColumn:GridColumn):String {
				var taxonId:Number = item.taxonId;
				if ( !isNaN(taxonId) ) {
					return taxonId.toString();
				} else {
					return "";
				}
			}
			
			protected function rankLabelFunction(item:TaxonSummaryProxy, gridColumn:GridColumn):String {
				if ( item.rank == null ) {
					return "";
				} else {
					var messageKey:String = "speciesImport.summaryList.rank." + item.rank.toString().toLowerCase();
					return Message.get(messageKey);
				}
			}
			
			protected function errorTypeLabelFunction(item:TaxonParsingErrorProxy, gridColumn:GridColumn):String {
				var type:TaxonParsingError$ErrorType = item.errorType;
				if ( type == null ) {
					return "";
				} else {
					var messageKey:String = "speciesImport.parsingError.type." + type.name.toLowerCase();
					return Message.get(messageKey);
				}
			}
			
			protected function errorMessageLabelFunction(item:TaxonParsingErrorProxy, gridColumn:GridColumn):String {
				switch (item.errorType) {
					case TaxonParsingError$ErrorType.WRONG_COLUMN_NAME:
						var message:String = Message.get("speciesImport.parsingError.wrong_column_name.message", [message]);
						return message;
					default:
						return Message.get(item.message);
				}
			}

			[Bindable]
			public function get showCloseButton():Boolean {
				return _showCloseButton;
			}

			public function set showCloseButton(value:Boolean):void {
				_showCloseButton = value;
			}

		]]>
	</fx:Script>
	
	
	<s:states>
		<s:State name="default" />
		<s:State name="loading" />
		<s:State name="selectFile" />
		<s:State name="uploading" />
		<s:State name="importing" />
		<s:State name="error" />
	</s:states>
	
	<s:VGroup includeIn="default"
			  itemCreationPolicy="immediate"
			  horizontalAlign="center"
			  height="100%" width="100%"
			  gap="30"
			  >
		<s:HGroup width="100%" 
				  verticalAlign="middle">
			<s:Label text="{Message.get('speciesImport.checklist')}" 
					 styleName="formLabel" />
			
			<s:DropDownList id="checklistsDropDown" labelField="name" />
			<s:Button id="newButton" 
					  label="{Message.get('global.new')}"
					  useHandCursor="true"
					  buttonMode="true"
					  />
			<s:Button id="editButton" 
					  label="{Message.get('global.edit')}"
					  useHandCursor="true"
					  buttonMode="true"
					  />
			<s:Button id="deleteButton" 
					  label="{Message.get('global.delete')}"
					  useHandCursor="true"
					  buttonMode="true"
					  />
		</s:HGroup>
		
		<s:VGroup height="100%" 
				  maxHeight="500"
				  width="100%"
				  visible="{checklistsDropDown.selectedItem != null}"
				  horizontalAlign="center">
			<s:DataGrid id="summaryDataGrid" 
						height="100%"
						width="100%"
						rowHeight="22">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn headerText="{Message.get('speciesImport.summaryList.taxonId')}" 
									  labelFunction="taxonIdLabelFunction" width="60" />
						<s:GridColumn headerText="{Message.get('speciesImport.summaryList.code')}" 
									  dataField="code" width="100" />
						<s:GridColumn headerText="{Message.get('speciesImport.summaryList.scientificName')}" 
									  dataField="scientificName" />
						<s:GridColumn headerText="{Message.get('speciesImport.summaryList.rank')}" 
									  labelFunction="rankLabelFunction" width="80" />
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			
			<datagrid:PaginationBar id="paginationBar" 
									height="16"
									horizontalCenter="0"
									/>
		</s:VGroup>
		
		<s:HGroup gap="50">
			<s:Button id="importButton" 
					  label="{Message.get('speciesImport.import')}"
					  useHandCursor="true"
					  buttonMode="true"
					  />
			
			<!--<s:Button id="exportButton" 
					  label="{Message.get('speciesImport.export')}"
					  useHandCursor="true"
					  buttonMode="true"
					  />-->
			
			<s:Button id="closeButton"
					  label="{Message.get('global.close')}"
					  includeInLayout="{showCloseButton}"
					  visible="{showCloseButton}"
					  />
		</s:HGroup>
	</s:VGroup>
	
	<s:VGroup width="100%" height="100%"
			  includeIn="uploading, importing"
			  itemCreationPolicy="immediate"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  gap="20"
			  >
		<s:Label id="progressTitle"
				 styleName="formLabel" />
		
		<mx:ProgressBar id="progressBar"
						horizontalCenter="0"
						verticalCenter="0"
						mode="manual"
						label="%3%"
						labelPlacement="center"
						width="80%"
						/>
		
		<s:Label id="progressLabel"
				 styleName="formLabel" />
		
		<s:Button id="cancelImportButton"
				  label="{Message.get('global.cancel')}"
				  useHandCursor="true"
				  buttonMode="true"
				  />
		
	</s:VGroup>
	
	<s:VGroup width="100%" height="100%"
			 includeIn="error"
			 itemCreationPolicy="immediate"
			 horizontalAlign="center">
		
		<s:Label text="{Message.get('speciesImport.error.title')}" />
		
		<s:DataGrid id="errorsDataGrid" width="100%" height="100%">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn headerText="{Message.get('speciesImport.parsingError.row')}"
								  dataField="row" width="50" />
					<s:GridColumn headerText="{Message.get('speciesImport.parsingError.column')}"
								  dataField="column" width="100" />
					<s:GridColumn headerText="{Message.get('speciesImport.parsingError.type')}"
								  labelFunction="{errorTypeLabelFunction}" width="100" />
					<s:GridColumn headerText="{Message.get('speciesImport.parsingError.message')}"
								  labelFunction="{errorMessageLabelFunction}" width="350" />
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		
		<s:Button id="errorsOkButton"
				  label="{Message.get('global.ok')}"
				  buttonMode="true"
				  useHandCursor="true" />
		
	</s:VGroup>
	
</s:VGroup>
