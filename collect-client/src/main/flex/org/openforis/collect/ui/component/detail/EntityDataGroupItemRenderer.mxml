<?xml version="1.0" encoding="utf-8"?>
<datagroup:MultipleNodesDataGroupItemRenderer 
				xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:detail="org.openforis.collect.ui.component.detail.*" 
				xmlns:datagroup="org.openforis.collect.ui.component.datagroup.*"
				currentState="{STATE_HORIZONTAL}"
				>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			
			import org.openforis.collect.metamodel.proxy.EntityDefinitionProxy;
			import org.openforis.collect.metamodel.proxy.ModelVersionProxy;
			import org.openforis.collect.model.proxy.EntityProxy;

			public static const DISPOSITION_HORIZONTAL:String = "horizontal";
			public static const DISPOSITION_VERTICAL:String = "vertical";
			
			public static const STATE_HORIZONTAL:String = "horizontal";
			public static const STATE_VERTICAL:String = "vertical";
			
			private var _entityDefinition:EntityDefinitionProxy;
			private var _nodeDefinitions:IList;
			private var _modelVersion:ModelVersionProxy;
			private var _entity:EntityProxy;
			private var _nodesDisposition:String = DISPOSITION_HORIZONTAL;
			
			override protected function createChildren():void {
				super.createChildren();
				contentGroup.addElement(rowNumberLabel);
				contentGroup.addElement(dataGroup);
			}
			
			protected function updateCurrentState():void {
				currentState = _nodesDisposition == DISPOSITION_HORIZONTAL ? STATE_HORIZONTAL: STATE_VERTICAL;
			}
			
			[Bindable]
			public function get entityDefinition():EntityDefinitionProxy {
				return _entityDefinition;
			}
			
			public function set entityDefinition(value:EntityDefinitionProxy):void {
				_entityDefinition = value;
			}
			
			[Bindable]
			public function get modelVersion():ModelVersionProxy {
				return _modelVersion;
			}
			
			public function set modelVersion(value:ModelVersionProxy):void {
				_modelVersion = value;
			}
			
			[Bindable]
			public function get nodeDefinitions():IList {
				return _nodeDefinitions;
			}
			
			public function set nodeDefinitions(value:IList):void {
				_nodeDefinitions = value;
			}
			
			[Bindable]
			public function get entity():EntityProxy {
				return _entity;
			}
			
			public function set entity(value:EntityProxy):void {
				_entity = value;
			}
			
			[Bindable(event="nodesDispositionChange")]
			public function get nodesDisposition():String {
				return _nodesDisposition;
			}
			
			public function set nodesDisposition(value:String):void {
				_nodesDisposition = value;
				dispatchEvent(new Event("nodesDispositionChange"));
				updateCurrentState();
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:Label id="rowNumberLabel"
				 styleName="formLabel"
				 visible="{entityDefinition.showRowNumbers}"
				 includeInLayout="{entityDefinition.showRowNumbers}"
				 text="{entity.index + 1}."
				 width="20"
				 height="22"
				 verticalAlign="middle"
				 textAlign="right"
				 />
		
		<s:DataGroup id="dataGroup" dataProvider="{nodeDefinitions}">
			<s:layout.horizontal>
				<s:HorizontalLayout gap="4" />
			</s:layout.horizontal>
			<s:layout.vertical>
				<s:VerticalLayout gap="2" />
			</s:layout.vertical> 
			<s:itemRenderer>
				<fx:Component>
					<detail:FormDataGroupItemRenderer
						entity="{parentDocument.entity}"
						modelVersion="{parentDocument.modelVersion}"
						/>
				</fx:Component>
			</s:itemRenderer>
		</s:DataGroup>
	</fx:Declarations>
	
	<datagroup:states>
		<s:State name="vertical" />
		<s:State name="horizontal" />
	</datagroup:states>
	
</datagroup:MultipleNodesDataGroupItemRenderer>
