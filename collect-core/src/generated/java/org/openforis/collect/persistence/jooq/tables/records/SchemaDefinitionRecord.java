/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.1"},
                            comments = "This class is generated by jOOQ")
public class SchemaDefinitionRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.collect.persistence.jooq.tables.records.SchemaDefinitionRecord> {

	private static final long serialVersionUID = -734121315;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setId(java.lang.Integer value) {
		setValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.ID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.lang.Integer getId() {
		return getValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.ID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.openforis.collect.persistence.jooq.tables.records.DataRecord> fetchDataList() {
		return create()
			.selectFrom(org.openforis.collect.persistence.jooq.tables.Data.DATA)
			.where(org.openforis.collect.persistence.jooq.tables.Data.DATA.DEFINITION_ID.equal(getValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.openforis.collect.persistence.jooq.tables.records.RecordRecord> fetchRecordList() {
		return create()
			.selectFrom(org.openforis.collect.persistence.jooq.tables.Record.RECORD)
			.where(org.openforis.collect.persistence.jooq.tables.Record.RECORD.ROOT_ENTITY_ID.equal(getValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [collect.schema_definition.survey_id]
	 * REFERENCES survey [collect.survey.id]
	 * </pre></code>
	 */
	public void setSurveyId(java.lang.Integer value) {
		setValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.SURVEY_ID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [collect.schema_definition.survey_id]
	 * REFERENCES survey [collect.survey.id]
	 * </pre></code>
	 */
	public java.lang.Integer getSurveyId() {
		return getValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.SURVEY_ID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [collect.schema_definition.survey_id]
	 * REFERENCES survey [collect.survey.id]
	 * </pre></code>
	 */
	public org.openforis.collect.persistence.jooq.tables.records.SurveyRecord fetchSurvey() {
		return create()
			.selectFrom(org.openforis.collect.persistence.jooq.tables.Survey.SURVEY)
			.where(org.openforis.collect.persistence.jooq.tables.Survey.SURVEY.ID.equal(getValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.SURVEY_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setPath(java.lang.String value) {
		setValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.PATH, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getPath() {
		return getValue(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION.PATH);
	}

	/**
	 * Create a detached SchemaDefinitionRecord
	 */
	public SchemaDefinitionRecord() {
		super(org.openforis.collect.persistence.jooq.tables.SchemaDefinition.SCHEMA_DEFINITION);
	}
}
