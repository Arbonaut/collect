/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.1"},
                            comments = "This class is generated by jOOQ")
public class TaxonName extends org.jooq.impl.UpdatableTableImpl<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord> {

	private static final long serialVersionUID = -1992465960;

	/**
	 * The singleton instance of taxon_name
	 */
	public static final org.openforis.collect.persistence.jooq.tables.TaxonName TAXON_NAME = new org.openforis.collect.persistence.jooq.tables.TaxonName();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord> __RECORD_TYPE = org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public final org.jooq.TableField<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, java.lang.String> LANGUAGE_CODE = createField("language_code", org.jooq.impl.SQLDataType.CHAR, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, java.lang.String> LANGUAGE_VARIETY = createField("language_variety", org.jooq.impl.SQLDataType.VARCHAR, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [collect.taxon_name.taxon_id]
	 * REFERENCES taxon [collect.taxon.id]
	 * </pre></code>
	 */
	public final org.jooq.TableField<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, java.lang.Integer> TAXON_ID = createField("taxon_id", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, java.lang.Integer> STEP = createField("step", org.jooq.impl.SQLDataType.INTEGER, this);

	/**
	 * No further instances allowed
	 */
	private TaxonName() {
		super("taxon_name", org.openforis.collect.persistence.jooq.Collect.COLLECT);
	}

	/**
	 * No further instances allowed
	 */
	private TaxonName(java.lang.String alias) {
		super(alias, org.openforis.collect.persistence.jooq.Collect.COLLECT, org.openforis.collect.persistence.jooq.tables.TaxonName.TAXON_NAME);
	}

	@Override
	public org.jooq.UniqueKey<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord> getMainKey() {
		return org.openforis.collect.persistence.jooq.Keys.taxon_name_pkey;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord>>asList(org.openforis.collect.persistence.jooq.Keys.taxon_name_pkey);
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.ForeignKey<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord, ?>>asList(org.openforis.collect.persistence.jooq.Keys.taxon_name__FK_taxon_name_taxon);
	}

	@Override
	public org.openforis.collect.persistence.jooq.tables.TaxonName as(java.lang.String alias) {
		return new org.openforis.collect.persistence.jooq.tables.TaxonName(alias);
	}
}
