/**
 * This class is generated by jOOQ
 */
package org.openforis.collect.persistence.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.0.1"},
                            comments = "This class is generated by jOOQ")
public class TaxonRecord extends org.jooq.impl.UpdatableRecordImpl<org.openforis.collect.persistence.jooq.tables.records.TaxonRecord> {

	private static final long serialVersionUID = -512806477;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setId(java.lang.Integer value) {
		setValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.ID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.lang.Integer getId() {
		return getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.ID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.openforis.collect.persistence.jooq.tables.records.DataRecord> fetchDataList() {
		return create()
			.selectFrom(org.openforis.collect.persistence.jooq.tables.Data.DATA)
			.where(org.openforis.collect.persistence.jooq.tables.Data.DATA.TAXON_ID.equal(getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public java.util.List<org.openforis.collect.persistence.jooq.tables.records.TaxonNameRecord> fetchTaxonNameList() {
		return create()
			.selectFrom(org.openforis.collect.persistence.jooq.tables.TaxonName.TAXON_NAME)
			.where(org.openforis.collect.persistence.jooq.tables.TaxonName.TAXON_NAME.TAXON_ID.equal(getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.ID)))
			.fetch();
	}

	/**
	 * An uncommented item
	 */
	public void setScientificName(java.lang.String value) {
		setValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.SCIENTIFIC_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.String getScientificName() {
		return getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.SCIENTIFIC_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setLevel(java.lang.Integer value) {
		setValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.LEVEL, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Integer getLevel() {
		return getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.LEVEL);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [collect.taxon.taxonomy_id]
	 * REFERENCES taxonomy [collect.taxonomy.id]
	 * </pre></code>
	 */
	public void setTaxonomyId(java.lang.Integer value) {
		setValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.TAXONOMY_ID, value);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [collect.taxon.taxonomy_id]
	 * REFERENCES taxonomy [collect.taxonomy.id]
	 * </pre></code>
	 */
	public java.lang.Integer getTaxonomyId() {
		return getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.TAXONOMY_ID);
	}

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [collect.taxon.taxonomy_id]
	 * REFERENCES taxonomy [collect.taxonomy.id]
	 * </pre></code>
	 */
	public org.openforis.collect.persistence.jooq.tables.records.TaxonomyRecord fetchTaxonomy() {
		return create()
			.selectFrom(org.openforis.collect.persistence.jooq.tables.Taxonomy.TAXONOMY)
			.where(org.openforis.collect.persistence.jooq.tables.Taxonomy.TAXONOMY.ID.equal(getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.TAXONOMY_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setStep(java.lang.Integer value) {
		setValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.STEP, value);
	}

	/**
	 * An uncommented item
	 */
	public java.lang.Integer getStep() {
		return getValue(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON.STEP);
	}

	/**
	 * Create a detached TaxonRecord
	 */
	public TaxonRecord() {
		super(org.openforis.collect.persistence.jooq.tables.Taxon.TAXON);
	}
}
